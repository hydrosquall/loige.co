---
import { getImage } from 'astro:assets'
import profilePicPlaceholders from '../../public/loige/FRAME_placeholder_480.json'
import HeroPicFrame0 from '../../public/loige/FRAME_0.png'
import HeroPicFrame1 from '../../public/loige/FRAME_1.png'
import HeroPicFrame2 from '../../public/loige/FRAME_2.png'
import HeroPicFrame3 from '../../public/loige/FRAME_3.png'
import HeroPicFrame4 from '../../public/loige/FRAME_4.png'
import HeroPicMusicFrame0 from '../../public/loige/FRAME_m_0.png'
import HeroPicMusicFrame1 from '../../public/loige/FRAME_m_1.png'
import HeroPicMusicFrame2 from '../../public/loige/FRAME_m_2.png'
import HeroPicMusicFrame3 from '../../public/loige/FRAME_m_3.png'
import HeroPicMusicFrame4 from '../../public/loige/FRAME_m_4.png'

const HERO_PIC_SIZE = 480
const WEBP = 0
const AVIF = 1
const PNG = 2

const profilePicFrames = await Promise.all(
  [
    HeroPicFrame0,
    HeroPicFrame1,
    HeroPicFrame2,
    HeroPicFrame3,
    HeroPicFrame4,
    HeroPicMusicFrame0,
    HeroPicMusicFrame1,
    HeroPicMusicFrame2,
    HeroPicMusicFrame3,
    HeroPicMusicFrame4,
  ].map((src) =>
    Promise.all([
      getImage({
        src,
        format: 'webp',
        width: HERO_PIC_SIZE,
        height: HERO_PIC_SIZE,
      }),
      getImage({
        src,
        format: 'avif',
        width: HERO_PIC_SIZE,
        height: HERO_PIC_SIZE,
      }),
      getImage({
        src,
        format: 'png',
        width: HERO_PIC_SIZE,
        height: HERO_PIC_SIZE,
      }),
    ]),
  ),
)
---

<div
  id="hero"
  class="pt-4 sm:pt-6 lg:pt-10 bg-bg-500 [background:radial-gradient(circle_at_30%_60%,_var(--color-primary-200)_0%,transparent_30%),radial-gradient(circle_at_80%_90%,_var(--color-secondary-300)_0%,transparent_30%),radial-gradient(circle_at_bottom,_var(--color-accent-300)_0%,var(--color-bg-500)_60%)]"
>
  <div
    class="flex justify-center items-end relative mx-auto max-w-screen-xl h-[400px] sm:h-[640px] overflow-hidden [clip-path:border-box]"
  >
    <div
      class="absolute top-[3.5rem] sm:top-[6rem] lg:top-[5rem] flex flex-col justify-center z-[3]"
    >
      <h1
        class="text-4xl sm:text-7xl lg:text-8xl font-bold text-primary-700 z-[3] drop-shadow-lg text-center"
      >
        Luciano Mammino
      </h1>
    </div>
    <div
      class="absolute top-[6.5rem] sm:top-[11rem] flex flex-col justify-center z-[1]"
    >
      <div class="font-serif sm:text-3xl lg:text-4xl text-text-500 z-[1]">
        Cloud Architect &amp; Full Stack Developer
      </div>
    </div>
    <div class="flex justify-center align-bottom z-[2]">
      <div class="w-[300px] h-[300px] sm:w-[480px] sm:h-[480px]">
        <picture>
          <source
            data-frames={JSON.stringify(
              profilePicFrames.map((f) => f[WEBP].src),
            )}
            srcset={profilePicPlaceholders[WEBP]}
            type="image/webp"
          />
          <source
            data-frames={JSON.stringify(
              profilePicFrames.map((f) => f[AVIF].src),
            )}
            srcset={profilePicPlaceholders[AVIF]}
            type="image/avif"
          />
          <source
            data-frames={JSON.stringify(
              profilePicFrames.map((f) => f[PNG].src),
            )}
            srcset={profilePicPlaceholders[PNG]}
            type="image/png"
          />
          <img
            src={profilePicPlaceholders[PNG]}
            id="profile-picture"
            alt="Luciano Mammino"
            class="z-[2] fixed [transition:filter_.5s_ease-out_0s] w-[300px] h-[300px] sm:w-[480px] sm:h-[480px] animate-hero-pulse"
            width="480"
            height="480"
          />
        </picture>
      </div>
    </div>
  </div>
</div>
<script>
  const PNG = 2
  const PROFILE_NUM_FRAMES = 5
  const SCROLL_TRIGGER_THRESHOLD = 20

  const profilePic = document.getElementById(
    'profile-picture',
  ) as HTMLImageElement
  const sources = [
    profilePic.parentElement!.querySelector(
      'source[type="image/webp"]',
    ) as HTMLSourceElement,
    profilePic.parentElement!.querySelector(
      'source[type="image/avif"]',
    ) as HTMLSourceElement,
    profilePic.parentElement!.querySelector(
      'source[type="image/png"]',
    ) as HTMLSourceElement,
  ] as HTMLSourceElement[]
  const framesUrl = sources.map((s) =>
    JSON.parse(s.dataset.frames!),
  ) as string[][]

  // swaps the placeholder with the actual image
  for (let i = 0; i < sources.length; i++) {
    sources[i].srcset = framesUrl[i][0]
  }

  const isListeningToMusic = false
  const frameOffset = isListeningToMusic ? 5 : 0
  // changes the image frame on scroll
  let lastScroll = 0
  let currentFrame = 0

  window.addEventListener('scroll', () => {
    let scrollDiff = lastScroll - window.scrollY
    if (Math.abs(scrollDiff) > SCROLL_TRIGGER_THRESHOLD) {
      const direction = window.scrollY > lastScroll ? 1 : -1
      currentFrame = (currentFrame + direction) % PROFILE_NUM_FRAMES
      if (currentFrame < 0) {
        currentFrame = PROFILE_NUM_FRAMES - 1
      }
      for (let i = 0; i < sources.length; i++) {
        sources[i].srcset = framesUrl[i][currentFrame + frameOffset]
      }
      profilePic.src = framesUrl[PNG][currentFrame + frameOffset]
      lastScroll = window.scrollY
    }
  })
</script>
